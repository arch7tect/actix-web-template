services:
  postgres:
    image: postgres:16
    container_name: memos-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: memos_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: memos-app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/memos_db
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 3737
      RUST_LOG: info,actix_web=debug,actix_web_template=debug
      LOG_FORMAT: pretty
      APP_ENV: development
      CORS_ALLOWED_ORIGINS: "*"
      MAX_REQUEST_SIZE: 262144
      ENABLE_SWAGGER: "true"
      DATABASE_MAX_CONNECTIONS: 10
      DATABASE_CONNECT_TIMEOUT: 30
    ports:
      - "3737:3737"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3737/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Optional observability services (uncomment to enable)
  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: memos-jaeger
  #   ports:
  #     - "16686:16686"
  #     - "14268:14268"
  #   environment:
  #     COLLECTOR_OTLP_ENABLED: true

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: memos-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: memos-grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     GF_SECURITY_ADMIN_PASSWORD: admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana

  # loki:
  #   image: grafana/loki:latest
  #   container_name: memos-loki
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml

volumes:
  postgres_data:
  # grafana_data: