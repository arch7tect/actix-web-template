services:
  postgres:
    image: postgres:16
    container_name: memos-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: memos_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: memos-app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/memos_db
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 3737
      RUST_LOG: info,actix_web=debug,actix_web_template=debug
      LOG_FORMAT: pretty
      APP_ENV: development
      CORS_ALLOWED_ORIGINS: "*"
      MAX_REQUEST_SIZE: 262144
      ENABLE_SWAGGER: "true"
      DATABASE_MAX_CONNECTIONS: 10
      DATABASE_CONNECT_TIMEOUT: 30
      OTLP_ENDPOINT: http://jaeger:4317
    ports:
      - "3737:3737"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3737/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Observability Stack
  # Access:
  # - Jaeger UI: http://localhost:16686
  # - Prometheus: http://localhost:9090
  # - Grafana: http://localhost:3001 (admin/admin)
  # - Metrics: http://localhost:3737/metrics

  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: memos-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      LOG_LEVEL: debug

  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: memos-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - app

  grafana:
    image: grafana/grafana:10.2.3
    container_name: memos-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:2.9.3
    container_name: memos-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  loki_data: